@{
    ViewBag.Title = "City";
    Layout = "~/Views/Shared/_AdminViewLayout.cshtml";
}

<div class="col-xs-12 col-sm-12" ng-controller="cityCtrl">
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">City</div>
        <div class="panel-body  border-green pt pb">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12">
                    <div class="form-horizontal">
                        <form name="form" novalidate>

                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> Country
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <select data-ng-model="CountryId" class="form-control"
                                            data-ng-options="c.Id as c.Name for c in allCountryFromDb | orderBy: 'Name'" name="CountryId" ng-required="true">
                                        <option value="">Select Country</option>
                                    </select>
                                    <b class="help-block" ng-if="form.CountryId.$error.required">
                                        Country can't be empty
                                    </b>
                                </div>
                            </div>

                            <div class="form-group" show-errors>
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> City
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <input class="form-control" type="text" name="Name" ng-model="Name" required ng-maxlength="50" />
                                    <b class="help-block" ng-if="form.Name.$error.required">
                                        City name can't be empty
                                    </b>
                                    <b class="help-block" ng-if="form.Name.$error.maxlength">Too large</b>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-3 col-sm-offset-3 col-xs-12 col-sm-8 col-md-8  padding-right-zero">
                                    <input type="button" ng-click="addCity()" class="btn btn-primary" value=@Resources.ResourceCommon.LblSave />
                                    <input type="button" ng-click="reset()" class="btn btn-default" value=@Resources.ResourceCommon.LblReset />
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3">
            <modal title='Success' visible="showModalforSearch">
                <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">City List</div>
        <div class="panel-body border-green pt pb">
            <div class="row mb">
                <div class="col-sm-9 padding-left-zero">
                    <div class="col-sm-4">
                        <input type="text" ng-model="SearchText" placeholder='Search Here' class="form-control" />
                    </div>
                    <div class="col-sm-8 text-center-vertical">
                        Filtered <b>{{ filtered.length }}</b> of <b>{{ allCityFromDb.length}}</b> city
                    </div>
                </div>
                <div class="col-sm-3 padding-right-zero">
                    <div class="col-sm-6 text-center-vertical">
                        <label>Page Size:</label>
                    </div>

                    <div class="col-sm-6">
                        <select ng-model="itemsPerPage" class="form-control">
                            <option ng-value="1">1</option>
                            <option ng-value="5">5</option>
                            <option ng-value="10">10</option>
                            <option ng-value="15">15</option>
                            <option ng-value="30">30</option>
                            <option ng-value="50">50</option>
                            <option ng-value="100">100</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length > 0">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>
                                    Country <a ng-click="sort_by('CountryName');">
                                        <i class="glyphicon glyphicon-sort-by-alphabet"></i>
                                    </a>
                                </th>
                                <th>
                                    City <a ng-click="sort_by('Name');">
                                        <i class="glyphicon glyphicon-sort-by-alphabet"></i>
                                    </a>
                                </th>
                                <th>@Resources.ResourceCommon.LblEdit </th>
                                <th>@Resources.ResourceCommon.LblDelete </th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>
                                    Country <a ng-click="sort_by('CountryName');">
                                        <i class="glyphicon glyphicon-sort-by-alphabet"></i>
                                    </a>
                                </th>
                                <th>
                                    City <a ng-click="sort_by('Name');">
                                        <i class="glyphicon glyphicon-sort-by-alphabet"></i>
                                    </a>
                                </th>
                                <th>@Resources.ResourceCommon.LblEdit </th>
                                <th>@Resources.ResourceCommon.LblDelete </th>
                            </tr>
                        </tfoot>
                        <tbody>
                            <tr ng-class="{'selected':data == selectedRow}" ng-repeat="data in filtered = (allCityFromDb  | filter:SearchText | orderBy : predicate :reverse) | startFrom:(currentPage-1)*entryLimit | limitTo:entryLimit">
                                @*| filter:{'Name':SearchText}:false|filter:{'CountryId':CountryId||undefined}:true| filter:{'DistrictId':DistrictId||undefined}:true|filter:{'AreaId':AreaId||undefined}:true | filter:{'Specializations':SpecializationId||undefined}:true*@
                                <td>{{data.CountryName }}</td>
                                <td>{{data.Name }}</td>

                                <td>
                                    <input type="button" value=Edit class="btn btn-info btn-sm" ng-click="populateCity(data)" />
                                </td>
                                <td>
                                    <input type="button" value=Delete class="btn btn-danger btn-sm" ng-bootbox-confirm='Delete'
                                           ng-bootbox-confirm-action="deleteCity(data)" ng-bootbox-confirm-action-cancel="confirmCallbackCancel(attr1, attr2)" />
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            @*<div class="row">
                  <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length > 0">
                    <div pagination="" max-size="15" page="currentPage" on-select-page="setPage(page)" boundary-links="true" total-items="filtered.length" items-per-page="entryLimit" class="pagination-small" previous-text="&laquo;" next-text="&raquo;"></div>
                  </div>
                </div>*@
            <div class="row">
                <div class="col-md-6">
                    <div class="pull-left">
                        <br />
                        <pre>Page: {{currentPage}}/{{numPages}}</pre>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="pull-right">
                        <ul uib-pagination total-items="filtered.length" items-per-page="itemsPerPage" ng-model="currentPage" max-size="5" boundary-links="true" num-pages="numPages" boundary-link-numbers="true" rotate="false"></ul>
                    </div>
                </div>
            </div>

            <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length == 0">
                <div class="col-xs-12 col-sm-12 col-md-12 alert alert-danger">
                    No Country Found
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
	

	<script type="text/javascript">
		app.filter('startFrom',
			function() {
				return function(input, start) {
					if (input) {
						start = +start; //parse to int
						return input.slice(start);
					}
					return [];
				}
			});
		app.factory('focus',
			function($rootScope, $timeout) {
				return function(name) {
					$timeout(function() {
						$rootScope.$broadcast('focusOn', name);
					});
				};
			});
		app.factory('cityService',
			[
				'$http', function($http) {

					return {
						saveCity: function(city) {
							return $http({
								url: '/City/CreateCity',
								method: 'POST',
								data: city
							})
						},
						getCity: function(id) {
							return $http.get('/City/GetCity/' + id);
						},
						getAllCity: function() {
							return $http.get('/City/GetCityList');
						},
						getAllCountry: function() {
							return $http.get('/Country/GetCountryList');
						},
						deleteCity: function(city) {
							return $http({
								url: '/City/DeleteCity',
								method: 'POST',
								data: city
							})
						}
					};
				}
			]);
		app.controller('cityCtrl',
			function($scope, $timeout, $http, focus, $location, $anchorScroll, cityService, $log, $ngBootbox) {
				$scope.messageModalObj = {};
				$scope.messageModalObj.message = '';
				loadAllCity();
				$scope.showModalforSearch = false;
				// Add a new city
				$scope.addCity = function() {
					$scope.$broadcast('show-errors-check-validity');
					if ($scope.form.$valid) {
						var city = {};
						city["Id"] = $scope.Id;
						city["Name"] = $scope.Name;
						city["CountryId"] = $scope.CountryId;

						cityService.saveCity(city)
							.then(function onSuccess(response) {
								loadAllCity();
								$scope.messageModalObj.message = response.data.message;
								$scope.showModalforSearch = true;
								$timeout(function() { $scope.showModalforSearch = false; }, 3000);
								$scope.reset();

							})
							.catch(function onError(response) {
								$ngBootbox.alert('Error in saving');
							});
					}
				};
				// Populate city
				$scope.selectedRow = null;
				$scope.populateCity = function(city) {
					$scope.selectedRow = city;
					$scope.Id = city.Id;
					$scope.Name = city.Name;
					$scope.CountryId = city.CountryId;
					$location.hash('searchDivId');
					$anchorScroll();
					focus('focusMe');
				}


				$scope.reset = function() {
					$scope.$broadcast('show-errors-reset');
					$scope.Id = '';
					$scope.Name = '';
					$scope.CountryId = '';
					$scope.selectedRow = null;
				}

				$scope.deleteCity = function(city) {
					cityService.deleteCity(city)
						.then(function onSuccess(response) {
							$scope.messageModalObj.message = response.data.message;
							$scope.showModalforSearch = true;
							$timeout(function() { $scope.showModalforSearch = false; }, 3000);
							loadAllCity();
						})
						.catch(function onError(response) {
							$ngBootbox.alert('Unable to deleted');
						});
				}

				// Load city
				function loadAllCity() {
					$scope.allCityFromDb = [];
					cityService.getAllCity()
						.then(function onSuccess(response) {
							$scope.allCityFromDb = response.data;
						})
						.catch(function onError(response) {
							$ngBootbox.alert('Error in loading');
						});
				}

				loadAllCountry();

				function loadAllCountry() {
					$scope.allCountryFromDb = [];
					cityService.getAllCountry()
						.then(function onSuccess(response) {
							$scope.allCountryFromDb = response.data;
						})
						.catch(function onError(response) {
							$ngBootbox.alert('Error in loading');
						});
				}


				$scope.currentPage = 1; //current page
				$scope.itemsPerPage = 5; //max no of items to display in a page
				$scope.filteredItems = $scope.allCountryFromDb.length; //Initially for no filter
				$scope.totalItems = $scope.allCountryFromDb.length;
				//$scope.maxSize = 15;

				$scope.setPage = function(pageNo) {
					$scope.currentPage = pageNo;
				};
				$scope.filter = function() {
					$timeout(function() {
							$scope.filteredItems = $scope.filtered.length;
						},
						9000);
				};
				$scope.sort_by = function(predicate) {
					$scope.predicate = predicate;
					$scope.reverse = !$scope.reverse;
				};
			});
	</script>
}
