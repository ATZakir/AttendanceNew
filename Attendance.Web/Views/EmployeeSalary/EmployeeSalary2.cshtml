
@{
    ViewBag.Title = @Resources.ResourceEmployeeSalary.LblEmployeeSalary;
    Layout = "~/Views/Shared/_AdminViewLayout.cshtml";
}

<div class="col-xs-12 col-sm-12" ng-controller="employeeSalary2Ctrl">

    @* ************ FORM - SECTION (Start)*************** *@
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">
            @Resources.ResourceEmployeeSalary.LblEmployeeSalary
        </div>
        <div class="panel-body  border-green pt pb">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12">
                    <div class="form-horizontal">
                        <form name="form" novalidate>
                            <div ng-show="level">
                                <div class="form-group" show-errors id="searchdivid">
                                    <div class=" padding-right-zero">
                                        <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                            <b class="starStyle">*</b> @Resources.ResourceCommon.LblDivisionName
                                        </label>
                                    </div>
                                    <div class="col-xs-12 col-sm-5 col-md-5">
                                        <select data-ng-model="DivisionId" class="form-control"
                                                data-ng-options="c.Id as c.Name for c in allDivisionFromDb | orderBy: 'Name'" name="DivisionId" ng-required="true" ng-change="GetAllDistrict(DivisionId)">
                                            <option value="">@Resources.ResourceCommon.LblSelectDivision</option>
                                        </select>
                                        <b class="help-block" ng-if="form.DivisionId.$error.required">
                                            @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceCommon.LblDivisionName)
                                        </b>
                                    </div>
                                </div>
                                <div class="form-group" show-errors id="searchdivid">
                                    <div class=" padding-right-zero">
                                        <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                            <b class="starStyle">*</b> @Resources.ResourceCommon.LblDistrictName
                                        </label>
                                    </div>
                                    <div class="col-xs-12 col-sm-5 col-md-5">
                                        <select data-ng-model="DistrictId" class="form-control"
                                                data-ng-options="c.Id as c.Name for c in allDistrictFromDb | orderBy: 'Name'" name="DistrictId" ng-required="true" ng-change="GetAllUpazila(DistrictId)">
                                            <option value="">@Resources.ResourceCommon.LblSelectDistrict</option>
                                        </select>
                                        <b class="help-block" ng-if="form.DistrictId.$error.required">
                                            @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceCommon.LblDistrictName)
                                        </b>
                                    </div>
                                </div>
                                <div class="form-group" show-errors id="searchdivid">
                                    <div class=" padding-right-zero">
                                        <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                            <b class="starStyle">*</b> @Resources.ResourceCommon.LblUpazilaName
                                        </label>
                                    </div>
                                    <div class="col-xs-12 col-sm-5 col-md-5">
                                        <select data-ng-model="UpazilaId" class="form-control"
                                                data-ng-options="c.Id as c.Name for c in allUpazilaFromDb | orderBy: 'Name'" name="UpazilaId" ng-required="true" ng-change="GetAllSchool(UpazilaId)">
                                            <option value="">@Resources.ResourceCommon.LblSelectUpazila</option>
                                        </select>
                                        <b class="help-block" ng-if="form.DistrictId.$error.required">
                                            @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceCommon.LblUpazilaName)
                                        </b>
                                    </div>
                                </div>
                                <div class="form-group" show-errors id="searchdivid">
                                    <div class=" padding-right-zero">
                                        <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                            <b class="starStyle">*</b> @Resources.ResourceCommon.LblSchoolName
                                        </label>
                                    </div>
                                    <div class="col-xs-12 col-sm-5 col-md-5">
                                        <select data-ng-model="SchoolId" class="form-control"
                                                data-ng-options="c.Id as c.Name for c in allSchoolFromDb | orderBy: 'Name'" name="SchoolId" ng-required="true" ng-change="loadAllEmployee(SchoolId)">
                                            <option value="">@Resources.ResourceCommon.LblSelectSchool</option>
                                        </select>
                                        <b class="help-block" ng-if="form.SchoolId.$error.required">
                                            @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceCommon.LblSchoolName)
                                        </b>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" show-errors id="searchdivid">
                                <div class=" padding-right-zero">
                                    <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                        <b class="starStyle">*</b> @Resources.ResourceEmployeeSalary.LblEmployee
                                    </label>
                                </div>
                                <div class="col-xs-12 col-sm-5 col-md-5">
                                    <select data-ng-model="EmployeeId" class="form-control"
                                            data-ng-options="c.Id as c.FullName for c in allEmployeeFromDb|                        orderBy: 'Name'" name="EmployeeId" ng-required="true">
                                        <option value="">
                                            @Resources.ResourceEmployeeSalary.LblSelectEmployee
                                    </option>
                                </select>
                                <b class="help-block" ng-if="form.EmployeeId.$error.required">
                                    @string.Format(Resources.ResourceCommon.VMsgRequired_Name, Resources.ResourceDistrict.LblDivisionName)
                                </b>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="padding-right-zero">
                                <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                    @Resources.ResourceEmployeeSalary.LblSalaryAccount
                                </label>
                            </div>
                            <div class="col-xs-12 col-sm-5 col-md-5">
                                <input class="form-control" type="text" name="SalaryAccount"
                                       ng-model="SalaryAccount" maxlength="50" />
                                <b class="help-block" ng-if="form.SalaryAccount.$error.maxlength">
                                    @Resources.ResourceCommon.VMsgToo_Large
                                </b>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class=" padding-right-zero">
                                <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                    @Resources.ResourceEmployeeSalary.LblGPFNo
                                </label>
                            </div>
                            <div class="col-xs-12 col-sm-5 col-md-5">
                                <input class="form-control" type="text" name="GPFNo" ng-model="GPFNo"
                                       maxlength="50" />
                                <b class="help-block" ng-if="form.GPFNo.$error.maxlength">
                                    @Resources.ResourceCommon.VMsgToo_Large
                                </b>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class=" padding-right-zero">
                                <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                    @Resources.ResourceEmployeeSalary.LblMBNo
                                </label>
                            </div>
                            <div class="col-xs-12 col-sm-5 col-md-5">
                                <input class="form-control" type="text" name="MBNo" ng-model="MBNo"
                                       maxlength="50" />
                                <b class="help-block" ng-if="form.MBNo.$error.maxlength">
                                    @Resources.ResourceCommon.VMsgToo_Large
                                </b>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class=" padding-right-zero">
                                <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                    @Resources.ResourceEmployeeSalary.LblSalaryScale
                                </label>
                            </div>
                            <div class="col-xs-12 col-sm-5 col-md-5">
                                <input class="form-control" type="text" name="SalaryScale"
                                       ng-model="SalaryScale" maxlength="50" />
                                <b class="help-block" ng-if="form.SalaryScale.$error.maxlength">
                                    @Resources.ResourceCommon.VMsgToo_Large
                                </b>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class=" padding-right-zero">
                                <label class="col-xs-12 col-sm-3 col-md-3 control-label default-color">
                                    @Resources.ResourceEmployeeSalary.LblMBNo
                                </label>
                            </div>
                            <div class="col-xs-12 col-sm-5 col-md-5">
                                <input class="form-control" type="text" name="BasicSalary"
                                       ng-model="BasicSalary" maxlength="50" />
                                <b class="help-block" ng-if="form.BasicSalary.$error.maxlength">
                                    @Resources.ResourceCommon.VMsgToo_Large
                                </b>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-3 col-sm-offset-3 col-xs-12 col-sm-8 col-md-8  padding-right-zero">
                                <input type="button" ng-click="addEmployeeSalary()" class="btn btn-primary" value="@Resources.ResourceCommon.LblSave" />
                                <input type="button" ng-click="reset()" class="btn btn-default" value="@Resources.ResourceCommon.LblReset" />
                            </div>
                        </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* ************ FORM - SECTION (End)*************** *@



    @* ************ POP-UP MODEL (Start)*************** *@
    <div class="row">
        <div class="col-xs-12 col-sm-3 col-md-3">
            <modal title='@Resources.ResourceCommon.MsgHeaderSuccess' visible="showModalforSearch">
                <alert ng-repeat="alert in alerts" type="alert.type" close="closeAlert($index)">{{alert.msg}}</alert>
                <form name="form.update" role="form">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <span>{{messageModalObj.message}}</span>
                        </div>
                    </div>
                </form>
            </modal>
        </div>
    </div>
    @* ************ POP-UP MODEL (End)*************** *@



    @* ************ TABLE - SECTION (Start)*************** *@
    <div class="panel panel-default">
        <div class="panel-heading text-lg text-bold text-uppercase">@Resources.ResourceEmployeeSalary.LblEmployeeSalary @Resources.ResourceCommon.lblList</div>
        <div class="panel-body border-green  pt pb">
            <div class="row mb">
                <div class="col-sm-8 padding-left-zero">
                    <div class="col-sm-4">
                        <input type="text" ng-model="SearchText"placeholder='@Resources.ResourceCommon.TextBoxSearch_Watermark' class="form-control" />
                    </div>
                    <div class="col-sm-8 text-center-vertical">
                        @Resources.ResourceCommon.lblFiltered <b>{{ filtered.length }}</b> of <b>{{ allEmployeeSalaryFromDb.length}}</b> @Resources.ResourceEmployeeSalary.LblTotalEmployeeSalary
                    </div>
                </div>
                <div class="col-sm-4 padding-right-zero">
                    <div class="col-sm-6 text-center-vertical text-right">
                        <label>@Resources.ResourceCommon.lblPageSize:</label>
                    </div>

                    <div class="col-sm-6">
                        <select ng-model="entryLimit" class="form-control">
                            <option>3</option>
                            <option>5</option>
                            <option>10</option>
                            <option>20</option>
                            <option>50</option>
                            <option>100</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length > 0">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>@Resources.ResourceCommon.LblGeo <a ng-click="sort_by('GeoName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceCommon.LblSchool <a ng-click="sort_by('SchoolName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblEmployee <a ng-click="sort_by('EmployeeName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblSalaryAccount <a ng-click="sort_by('SalaryAccount');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblGPFNo <a ng-click="sort_by('GPFNo');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblMBNo <a ng-click="sort_by('MBNo');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblSalaryScale <a ng-click="sort_by('SalaryScale');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblBasicSalary <a ng-click="sort_by('BasicSalary');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceCommon.LblEdit </th>
                                    <th>@Resources.ResourceCommon.LblDelete </th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                <tr>
                                    <th>@Resources.ResourceCommon.LblGeo <a ng-click="sort_by('GeoName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceCommon.LblSchool <a ng-click="sort_by('SchoolName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblEmployee <a ng-click="sort_by('EmployeeName');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblSalaryAccount <a ng-click="sort_by('SalaryAccount');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblGPFNo <a ng-click="sort_by('GPFNo');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblMBNo <a ng-click="sort_by('MBNo');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblSalaryScale <a ng-click="sort_by('SalaryScale');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceEmployeeSalary.LblBasicSalary <a ng-click="sort_by('BasicSalary');"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a></th>
                                    <th>@Resources.ResourceCommon.LblEdit </th>
                                    <th>@Resources.ResourceCommon.LblDelete </th>
                                </tr>
                                </tr>
                            </tfoot>
                            <tbody>
                                <tr ng-class="{'selected':data == selectedRow}" ng-repeat="data in filtered = (allEmployeeSalaryFromDb  | filter:SearchText | orderBy : predicate :reverse) | startFrom:(currentPage-1)*entryLimit | limitTo:entryLimit">
                                    <td>{{data.GeoName }}</td>
                                    <td>{{data.SchoolName }}</td>
                                    <td>{{data.EmployeeName }}</td>
                                    <td>{{data.SalaryAccount }}</td>
                                    <td>{{data.GPFNo }}</td>
                                    <td>{{data.MBNo }}</td>
                                    <td>{{data.SalaryScale }}</td>
                                    <td>{{data.BasicSalary }}</td>

                                    <td><input type="button" value=@Resources.ResourceCommon.LblEdit class="btn btn-info btn-sm" ng-click="populateEmployeeSalary(data)" /></td>
                                    <td>
                                        <input type="button" value=@Resources.ResourceCommon.LblDelete class="btn btn-danger btn-sm" ng-bootbox-confirm='@Resources.ResourceCommon.MsgConfirm_Delete'
                                               ng-bootbox-confirm-action="deleteEmployeeSalary(data)" ng-bootbox-confirm-action-cancel="confirmCallbackCancel(attr1, attr2)" />
                                    </td>
</tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length > 0">
                    <div pagination="" max-size="15" page="currentPage" on-select-page="setPage(page)" boundary-links="true" total-items="filtered.length" items-per-page="entryLimit" class="pagination-small" previous-text="&laquo;" next-text="&raquo;"></div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12" ng-show="filtered.length == 0">
                <div class="col-xs-12 col-sm-12 col-md-12 alert alert-danger">
                    @Resources.ResourceEmployeeSalary.LblNoEmployeeSalaryFound
                </div>
            </div>
        </div>
    </div>
    @* ************ TABLE - SECTION (End)*************** *@

</div>


@section scripts{
    <script type="text/javascript">
    app.filter('startFrom', function () {
        return function (input, start) {
            if (input) {
                start = +start; //parse to int
                return input.slice(start);
            }
            return [];
        }
    });
    app.factory('focus', function ($rootScope, $timeout) {
        return function (name) {
            $timeout(function () {
                $rootScope.$broadcast('focusOn', name);
            });
        };
    });
    app.factory('employeeSalary2Service', ['$http', function ($http) {

        return {
            saveEmployeeSalary: function (employeeSalary) {
           
                    var fdata = new FormData();
                    var url = '/EmployeeSalary/CreateEmployeeSalary';
                    for(var key in employeeSalary) {
                    if (employeeSalary.hasOwnProperty(key)) {
                        fdata.append(key, employeeSalary[key] ? employeeSalary[key] : '');
                    }
                }
                return $http.post(url,
                    fdata,
                    {
                        transformRequest: angular.identity,
                        headers: { 'Content-Type': undefined }
                    });
                
            },
            getEmployeeSalary: function (id) {
                return $http.get('/EmployeeSalary/GetEmployeeSalary/' + id);
            },
            getAllEmployeeSalary: function () {
                return $http.get('/EmployeeSalary/GetEmployeeSalaryList2');
            },
            getAllDivision: function () {
                return $http.get('/UserPermission/GetAllDivisionByUserPermission');
            },
            getAllDistrictListByDivision: function (id) {
                return $http.get('/UserPermission/GetAllDistrictByUserPermission/' + id);
            },
            getAllUpazilaListByDistrict: function (id) {
                return $http.get('/UserPermission/GetAllUpazilaByUserPermission/' + id);
            },
            getAllSchoolListByUpazila: function (id) {
                return $http.get('/UserPermission/GetAllSchoolByUserPermission/' + id);
            },
            getAllEmployeeFromDb: function (id) {
                return $http.get('/Employee/GetEmployeeListBySchool/' + id);
            },
            uploadFile: function (employeeSalary, file) {
                var fdata = new FormData();
                var url = '/EmployeeSalary/UpoladFile';
                fdata.append('employeeSalary', employeeSalary);
                fdata.append('file', file);

                return $http.post(url,
                    fdata,
                    {
                        transformRequest: angular.identity,
                        headers: { 'Content-Type': undefined }
                    });

            },

            deleteEmployeeSalary: function (employeeSalary) {
                return $http({
                    url: '/EmployeeSalary/DeleteEmployeeSalary',
                    method: 'POST',
                    data: employeeSalary
                });
            }
        };
    }]);app.controller('employeeSalary2Ctrl', function ($scope, $timeout, $http, focus, $location, $anchorScroll, employeeSalary2Service, $log, $ngBootbox) {
        $scope.messageModalObj = {};
        $scope.messageModalObj.message = '';
        $scope.level = true;   

        $scope.Validity = new Date();
        loadAllEmployeeSalary();
        $scope.showModalforSearch = false;
        $scope.editmode = false;
        // Add a new employeeSalary
        $scope.addEmployeeSalary = function () {
            $scope.$broadcast('show-errors-check-validity');
            if ($scope.form.$valid) {
                var employeeSalary = {};
                employeeSalary["Id"] = $scope.Id;
                employeeSalary["EmployeeId"] = $scope.EmployeeId;
                employeeSalary["SalaryAccount"] = $scope.SalaryAccount;
                employeeSalary["GPFNo"] = $scope.GPFNo;
                employeeSalary["MBNo"] = $scope.MBNo;
                employeeSalary["SalaryScale"] = $scope.SalaryScale;
                employeeSalary["BasicSalary"] = $scope.BasicSalary;
                employeeSalary["SchoolId"] = $scope.SchoolId;
               
                employeeSalary2Service.saveEmployeeSalary(employeeSalary)
                .then(function onSuccess(response) {
                    loadAllEmployeeSalary();
                    $scope.messageModalObj.message = response.data.message;
                    $scope.showModalforSearch = true;
                    $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                    $scope.reset();

                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInSaving');
                });
            }
        };
        // Populate employeeSalary
        $scope.selectedRow = null;
        $scope.populateEmployeeSalary = function (employeeSalary) {
            $scope.selectedRow = employeeSalary;
            $scope.editmode = true;
            $scope.Id = employeeSalary.Id;
            $scope.DivisionId = employeeSalary.DivisionId;
            $scope.DistrictId1 = employeeSalary.DistrictId;
            $scope.UpazilaId1 = employeeSalary.UpazilaId;
            $scope.SchoolId1 = employeeSalary.SchoolId;
            $scope.EmployeeId1 = employeeSalary.EmployeeId;
            $scope.GetAllDistrict($scope.DivisionId);
            $scope.GetAllUpazila($scope.DistrictId1);
            $scope.GetAllSchool($scope.UpazilaId1);
            $scope.loadAllEmployee($scope.SchoolId1);
            
            $scope.SalaryAccount = employeeSalary.SalaryAccount;
            $scope.GPFNo = employeeSalary.GPFNo;
            $scope.MBNo = employeeSalary.MBNo;
            $scope.SalaryScale = employeeSalary.SalaryScale;
            $scope.BasicSalary = employeeSalary.BasicSalary;
            $location.hash('searchDivId');
            $anchorScroll();
            focus('focusMe');
        }

        $scope.reset = function () {
            $scope.$broadcast('show-errors-reset');
            //$scope.Id = '';
            $scope.SalaryAccount = '';
            $scope.GPFNo = '';
            $scope.MBNo = '';
            $scope.SalaryScale = '';
            $scope.BasicSalary = '';
            $scope.DivisionId = null;
            $scope.DistrictId = null;
            $scope.UpazilaId = null;
            $scope.SchoolId = null;
            $scope.EmployeeId = null;
            $scope.DistrictId1 = null;
            $scope.UpazilaId1 = null;
            $scope.SchoolId1 = null;
            $scope.EmployeeId1 = null;
            $scope.selectedRow = null;
        }

        $scope.deleteEmployeeSalary = function (employeeSalary) {
            employeeSalary2Service.deleteEmployeeSalary(employeeSalary)
            .then(function onSuccess(response) {
                $scope.messageModalObj.message = response.data.message;
                $scope.showModalforSearch = true;
                $timeout(function () { $scope.showModalforSearch = false; }, 3000);
                loadAllEmployeeSalary();
            })
            .catch(function onError(response) {
                $ngBootbox.alert('@Resources.ResourceCommon.MsgNot_deleted');
            });
        }
        // Load employeeSalary
        function loadAllEmployeeSalary() {
            $scope.allEmployeeSalaryFromDb = [];
            employeeSalary2Service.getAllEmployeeSalary()
                .then(function onSuccess(response) {
                    $scope.allEmployeeSalaryFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        // Load employee
        $scope.loadAllEmployee= function(schoolId) {
            $scope.allEmployeeFromDb = [];
            if (schoolId == undefined) return;

            employeeSalary2Service.getAllEmployeeFromDb(schoolId)
                .then(function onSuccess(response) {
                    $scope.allEmployeeFromDb = response.data;
                    $scope.EmployeeId = $scope.EmployeeId1;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

        loadAllDivision();
        function loadAllDivision() {
            $scope.allDivisionFromDb = [];
            employeeSalary2Service.getAllDivision()
                .then(function onSuccess(response) {
                    $scope.allDivisionFromDb = response.data;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

            $scope.GetAllDistrict = function (divisionId) {
                $scope.allDistrictFromDb = [];
                if (divisionId == undefined) return;

                employeeSalary2Service.getAllDistrictListByDivision(divisionId)
                .then(function onSuccess(response) {
                    $scope.allDistrictFromDb = response.data;
                    $scope.DistrictId = $scope.DistrictId1;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }

            $scope.GetAllUpazila = function (districtId) {
                $scope.allUpazilaFromDb = [];
                if (districtId == undefined) return;

                employeeSalary2Service.getAllUpazilaListByDistrict(districtId)
                .then(function onSuccess(response) {
                    $scope.allUpazilaFromDb = response.data;
                    $scope.UpazilaId = $scope.UpazilaId1;
                })
                .catch(function onError(response) {
                    $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                });
        }
            
            $scope.GetAllSchool = function (upazilaId) {
                $scope.allSchoolFromDb = [];
                if (upazilaId == undefined) return;

                employeeSalary2Service.getAllSchoolListByUpazila(upazilaId)
                    .then(function onSuccess(response) {
                        $scope.allSchoolFromDb = response.data;
                        $scope.SchoolId = $scope.SchoolId1;
                    })
                    .catch(function onError(response) {
                        $ngBootbox.alert('@Resources.ResourceCommon.MsgErrorInLoading');
                    });
        }

        $scope.currentPage = 1; //current page
        $scope.entryLimit = 10; //max no of items to display in a page
        $scope.filteredItems = $scope.allEmployeeSalaryFromDb.length; //Initially for no filter
        $scope.totalItems = $scope.allEmployeeSalaryFromDb.length;
        //$scope.maxSize = 15;

        $scope.setPage = function (pageNo) {
            $scope.currentPage = pageNo;
        };
        $scope.filter = function () {
            $timeout(function () {
                $scope.filteredItems = $scope.filtered.length;
            }, 9000);
        };
        $scope.sort_by = function (predicate) {
            $scope.predicate = predicate;
            $scope.reverse = !$scope.reverse;
        };
    });</script>
    }

